/**
 * MIT License
 *
 * Copyright (C) 2024 Huawei Device Co., Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateStateH.js
 */
#pragma once

#ifdef ANDROID
#include <folly/dynamic.h>
#include <react/renderer/mapbuffer/MapBuffer.h>
#include <react/renderer/mapbuffer/MapBufferBuilder.h>
#endif

namespace facebook {
namespace react {

class BaiduMapOverlayArcState {
public:
  BaiduMapOverlayArcState() = default;

#ifdef ANDROID
  BaiduMapOverlayArcState(BaiduMapOverlayArcState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayCircleState {
public:
  BaiduMapOverlayCircleState() = default;

#ifdef ANDROID
  BaiduMapOverlayCircleState(BaiduMapOverlayCircleState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayClusterState {
public:
  BaiduMapOverlayClusterState() = default;

#ifdef ANDROID
  BaiduMapOverlayClusterState(BaiduMapOverlayClusterState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayHeatMapState {
public:
  BaiduMapOverlayHeatMapState() = default;

#ifdef ANDROID
  BaiduMapOverlayHeatMapState(BaiduMapOverlayHeatMapState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayInfoWindowState {
public:
  BaiduMapOverlayInfoWindowState() = default;

#ifdef ANDROID
  BaiduMapOverlayInfoWindowState(BaiduMapOverlayInfoWindowState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayMarkerIconState {
public:
  BaiduMapOverlayMarkerIconState() = default;

#ifdef ANDROID
  BaiduMapOverlayMarkerIconState(BaiduMapOverlayMarkerIconState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayMarkerState {
public:
  BaiduMapOverlayMarkerState() = default;

#ifdef ANDROID
  BaiduMapOverlayMarkerState(BaiduMapOverlayMarkerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayPolygonState {
public:
  BaiduMapOverlayPolygonState() = default;

#ifdef ANDROID
  BaiduMapOverlayPolygonState(BaiduMapOverlayPolygonState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayPolylineState {
public:
  BaiduMapOverlayPolylineState() = default;

#ifdef ANDROID
  BaiduMapOverlayPolylineState(BaiduMapOverlayPolylineState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapOverlayTextState {
public:
  BaiduMapOverlayTextState() = default;

#ifdef ANDROID
  BaiduMapOverlayTextState(BaiduMapOverlayTextState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class BaiduMapViewState {
public:
  BaiduMapViewState() = default;

#ifdef ANDROID
  BaiduMapViewState(BaiduMapViewState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

} // namespace react
} // namespace facebook